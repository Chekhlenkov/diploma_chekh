version: "3.8"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-34
    container_name: frontend
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    image: icheh/diplom_cheh:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    container_name: api
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: "db"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  migrations:
    image: icheh/diplom_cheh:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: "db"
    command: >
      sh -c "python ./manage.py migrate"

  db:
    image: postgres:15.2
    ports:
      - "5432:5432"
    restart: always
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: "db"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:











