version: "3.8"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"

  api:
    build:
      context: ..
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./../.env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  migrations:
    build:
      context: ..
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./../.env
    command: >
      sh -c "python ./manage.py migrate"

  bot:
    build: .
    container_name: bot
    env_file:
      - ./../.env
    depends_on:
      pgdb:
        condition: service_healthy
    command: python manage.py runbot

  db:
    image: postgres:latest
    restart: always
    env_file:
      - ./../.env
    ports:
      - 5432:5432
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:










