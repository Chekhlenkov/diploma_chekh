version: "3.9"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    container_name: frontend
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    image: icheh/diplom_cheh:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
<<<<<<< HEAD
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
=======
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: "todolist_db"
>>>>>>> parent of dc50f62 ($POSTGRES_DB)
      POSTGRES_HOST: "db"
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  migrations:
    image: icheh/diplom_cheh:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: "db"
    depends_on:
      db:
        condition: service_healthy
<<<<<<< HEAD
=======
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: "todolist_db"
      POSTGRES_HOST: "db"
>>>>>>> parent of dc50f62 ($POSTGRES_DB)
    command: >
      sh -c "python ./manage.py migrate" 

  db:
    image: postgres:15.2
    environment:
<<<<<<< HEAD
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
=======
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: "todolist_db"
>>>>>>> parent of dc50f62 ($POSTGRES_DB)
      POSTGRES_HOST: "db"
    restart: always
    container_name: db
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data: